// ahbv2_stub_interrupt_sender.mxscr

int irq_out0 = getPortID("p_out0");
int irq_out1 = getPortID("p_out1");
int irq_out2 = getPortID("p_out2");
int irq_out3 = getPortID("p_out3");

setPortData(irq_out0, "DATA", 0);
drivePort(irq_out0);
setPortData(irq_out1, "DATA", 0);
drivePort(irq_out1);
setPortData(irq_out2, "DATA", 0);
drivePort(irq_out2);
setPortData(irq_out3, "DATA", 0);
drivePort(irq_out3);

wait(1000);

message(MX_MSG_INFO, "assert irq_in0.");
setPortData(irq_out0, "DATA", 1);
drivePort(irq_out0);

wait(200);

message(MX_MSG_INFO, "deassert irq_in0.");
setPortData(irq_out0, "DATA", 0);
drivePort(irq_out0);

wait(10);

message(MX_MSG_INFO, "assert irq_in1.");
setPortData(irq_out1, "DATA", 1);
drivePort(irq_out1);

wait(200);

message(MX_MSG_INFO, "deassert irq_in1.");
setPortData(irq_out1, "DATA", 0);
drivePort(irq_out1);

wait(10);

message(MX_MSG_INFO, "assert irq_in2.");
setPortData(irq_out2, "DATA", 1);
drivePort(irq_out2);

wait(200);

message(MX_MSG_INFO, "deassert irq_in2.");
setPortData(irq_out2, "DATA", 0);
drivePort(irq_out2);

wait(10);

message(MX_MSG_INFO, "assert irq_in3.");
setPortData(irq_out3, "DATA", 1);
drivePort(irq_out3);

wait(200);

message(MX_MSG_INFO, "deassert irq_in3.");
setPortData(irq_out3, "DATA", 0);
drivePort(irq_out3);

