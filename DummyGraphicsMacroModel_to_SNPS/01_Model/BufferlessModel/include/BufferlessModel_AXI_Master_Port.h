/*
 *    Class definition of AXIv2_master port for component <SD_AXIv2_DummyGraphicsMacroModel>
 *
 *    This code has been generated by the SoC Designer Component Wizard.
 *    Copyright (c)  2008 Carbon Design Systems Inc.
 *
 * THIS SOFTWARE CONTAINS CONFIDENTIAL INFORMATION AND TRADE SECRETS OF CARBON
 * DESIGN SYSTEMS, INC.  PERMISSION IS HEREBY GRANTED TO USE, MODIFY, AND/OR COPY
 * THIS SOFTWARE FOR INTERNAL USE ONLY PROVIDED THAT THE ABOVE COPYRIGHT NOTICE
 * APPEARS IN ALL COPIES OF THIS SOFTWARE.
 */

#ifndef AXI_MASTER_PORT_FOR_BUFFERLESS_MACRO_MODEL_H
#define AXI_MASTER_PORT_FOR_BUFFERLESS_MACRO_MODEL_H

#include "maxsimCompatibility.h"
#include "AXI_Master_Port.h"


class SD_AXIv2_DummyGraphicsMacroModel;

template<class WrapperClass>
class BufferlessModel_AXI_Master_Port : public AXI_Master_Port
{

public:
  BufferlessModel_AXI_Master_Port(WrapperClass* _owner, std::string name);
  virtual ~BufferlessModel_AXI_Master_Port() {}

  virtual void driveTransactionCB_R();
  virtual void driveTransactionCB_B();

/* add by katomasa start 20110620 */
  bool m_aw_done_flag; /**< 1 when AW is transfered and 0 when B is transfered */
  bool m_w_done_flag;  /**< 1 when all W is transfered and 0 when B is transfered */
  bool m_ar_done_flag; /**< 1 when AR is transfered and 0 when R is transfered */
/* add by katomasa end 20110620 */
  bool m_getsendr_done_flag;
  bool m_drive_transaction_cb_r_done_flag;

private:
  BufferlessModel_AXI_Master_Port();
  BufferlessModel_AXI_Master_Port(const BufferlessModel_AXI_Master_Port<WrapperClass>& rhs);
  BufferlessModel_AXI_Master_Port& operator=(const BufferlessModel_AXI_Master_Port<WrapperClass>& rhs);
  
private:
  WrapperClass* owner_master;

};

#endif

